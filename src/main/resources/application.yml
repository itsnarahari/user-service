#
#spring:
#    application-name: user-service
#    main:
#      allow-circular-references: true
#    datasource:
#        url: jdbc:mysql://localhost:3306/users
#        username: nextlevel
#        password: nextlevel
#
#    jpa:
#        show-sql: true
#        hibernate:
#            ddl-auto: none
#            naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
#        properties:
#            hibernate:
#                dialect: org.hibernate.dialect.MySQLDialect
#                format_sql: true
#                session_factory:
#                  interceptor: com.user.config.AuditLoggingInterceptor
#    security:
#      oauth2:
#        client:
#          registration:
#            google:
#              clientId: 907368398057-mv4cum5drqbgec6022n4kumodqunao3g.apps.googleusercontent.com
#              clientSecret: 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
#              scope:
#                - email
#                - profile
#            facebook:
#              clientId: 1037504973982122
#              clientSecret: 0c85293305ccc65fbf49512336ee0f2e
##              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - email
#                - public_profile
#            github:
#              clientId: a574e458362e2339431f
#              clientSecret: 943d81bb1585d0a98e44917e78dfd8a7215a2acc
##              redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
#              scope:
#                - user:email
#                - read:user
#          provider:
#            facebook:
#              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
#              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
#              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
#app:
#  auth:
#    resetPasswordLink: http://localhost:3000/reset-password
#    tokenSecret: 413F4428472B4B6250655368566D5970337336763979244226452948404D6351
#    tokenExpirationMsec: 864000000
#    sub: JWT User Token
#    cookieMaxAge: 864000000
#    cookiePath: /
#    secretKey: user secret key
#    #  oauth2:
#    # After successfully authenticating with the OAuth2 Provider,
#    # we'll be generating an auth token for the user and sending the token to the
#    # redirectUri mentioned by the client in the /oauth2/authorize request.
#    # We're not using cookies because they won't work well in mobile clients.
#
#
#  #    authorizedRedirectUris:
##      - http://localhost:3000/oauth2/redirect
##      - myandroidapp://oauth2/redirect
##      - myiosapp://oauth2/redirect
#server:
#  port: 8080
#
#twilio:
#  account:
#    sid: ACd78e07066a3ae2422dfa53af9272d269
#    auth_token: 3a1a8dd4116f84af045d587416b2a3f7
#    from: +15037136243
#
#email:
#  host: smtp.gmail.com
#  port: 587
#  username: naraharinaik7@gmail.com
#  password: buuh qvgo mqpi gxop
#  debug: true
#  subject: One Time Password
#  fromName: USER-SERVICE
#  logoUrl: https://cdn-icons-png.flaticon.com/512/14/14382.png
#
#CONSTANTS:
#  JWT:
#    SECRET_KEY: DA693C13E7C5528473D915EB827EC
#
#
#
